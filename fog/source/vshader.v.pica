.fvec vertex

; Constants
.constf myconst(0.0, 1.0, 0.5, 0.0)

; Outputs
.out outpos position
.out outclr color

; Inputs (defined as aliases for convenience)
.alias inpos v0

.proc main

  ; We use r1 to mix vertices according to weight (r2 = temp because mad is broken)
  add r1.z, myconst.y, -inpos.z ; z = 1.0 - weight
  mul r1.xy, vertex.xy, r1.zz ; xy = bottom_xy * (1.0 - weight)
  mul r2.xy, vertex.zw, inpos.zz ; xy += top_xy * weight
  add r1.xy, r1.xy, r2.xy 

  ; r15 will be our weapon of choice to mirror outclr
  ; (each output component has to be written exactly one or the PICA will freeze)
  mov r15.xyz, v1.xyz
  mov r15.w, myconst.y

  ; outpos = projectionMatrix * inpos; force hardcoded z and w
  mov outpos.x, inpos.x
  mov outpos.y, inpos.y
  mov outpos.z, r1.x
  mov outpos.w, r1.y

  ; outcolor = (r15.xyz, 1.0)
  mov outclr, r15

  end
.end
